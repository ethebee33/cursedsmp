plugins {
    id 'java'
    //id("io.papermc.paperweight.userdev") version "1.5.9"
}

group = project.name
version = project.pluginVersion

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url "https://maven.enginehub.org/repo/" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
    maven {
        name = 'citizens-repo'
        url = 'https://maven.citizensnpcs.co/repo'
    }
}


dependencies {
    //https://hub.spigotmc.org/nexus/service/rest/repository/browse/snapshots/org/spigotmc/spigot-api/
    //spigot
    compileOnly("org.spigotmc:spigot-api:${MCversion}-R0.1-SNAPSHOT")

    //paper
    //paperweight.paperDevBundle("1.20.1-R0.1-SNAPSHOT")

    //javacord for discord bot
    implementation('org.javacord:javacord:3.8.0')
    //luckperms api
    compileOnly("net.luckperms:api:5.4")
    //worldguard api
    implementation 'com.sk89q.worldguard:worldguard-bukkit:7.0.9'
    //adventure-api
    implementation("net.kyori:adventure-api:4.17.0")
    implementation("net.kyori:adventure-text-minimessage:4.17.0")
    compileOnly('net.citizensnpcs:citizens-main:2.0.35-SNAPSHOT') {
        exclude group: '*', module: '*'
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
